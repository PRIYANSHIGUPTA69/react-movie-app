{"version":3,"sources":["component/New.jsx","component/List.jsx","component/Pagination.jsx","component/MoviesPages.jsx","component/NavBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["New","Component","List","this","props","genres","groupBygenre","class","map","cgObj","onClick","name","id","Pagination","numberofPage","currentPage","changeCurrentPage","pageNumberArr","i","push","aria-label","className","pageNumber","additional","aria-current","MoviesPage","state","movies","currSearchText","limit","cGenre","deleteEntry","filtereMovies","filter","movieObj","_id","setState","setCurrentText","e","task","target","value","sortByRatings","sortedMovies","sort","movieObjA","movieObjB","dailyRentalRate","sortByStock","trim","numberInStock","changelimit","currLimit","a","fetch","resp","json","jsonMovies","jsonGenres","console","log","filteredArr","genre","title","toLowerCase","includes","Math","ceil","length","si","eidx","slice","style","padding","type","onChange","placeholder","scope","NavBar","to","data-toggle","data-target","aria-controls","aria-expanded","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19c5a3d2.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class New extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* form  */}\r\n                New component\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class List extends Component {\r\n    render() {\r\n        let { genres, groupBygenre } = this.props;\r\n        return (\r\n            <ul class=\"list-group\">\r\n                {\r\n                    genres.map((cgObj) => {\r\n                        return (<li class=\"list-group-item\" key={cgObj.id}\r\n                            onClick={() => { groupBygenre(cgObj.name) }}>\r\n                            {cgObj.name}</li>)\r\n                    })\r\n                }\r\n\r\n            </ul>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Pagination extends Component {\r\n    render() {\r\n        let { numberofPage, currentPage, changeCurrentPage } = this.props;\r\n        let pageNumberArr = []\r\n        for (let i = 0; i < numberofPage; i++) {\r\n            pageNumberArr.push(i + 1);\r\n        }\r\n        // console.log(pageNumberArr);\r\n        return (\r\n            <nav aria-label=\"...\" className=\"col-2\" >\r\n                <ul className=\"pagination \">\r\n                    {\r\n                        pageNumberArr.map((pageNumber) => {\r\n                            let additional = pageNumber == currentPage ? \"page-item active\" : \"page-item\";\r\n                            return (\r\n                                <li className={additional}\r\n                                    aria-current=\"page\" onClick={() => { changeCurrentPage(pageNumber) }}>\r\n                                    <span className=\"page-link\">{pageNumber}</span>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { getMovies } from '../temp/movies';\r\nimport List from \"./List.jsx\";\r\nimport Pagination from \"./Pagination.jsx\";\r\nexport default class MoviesPage extends Component {\r\n    state = {\r\n        movies: [],\r\n        genres: [{ id: 1, name: \"All Genres\" }],\r\n        currSearchText: \"\",\r\n        limit: 4,\r\n        currentPage: 1,\r\n        cGenre: \"All Genres\"\r\n    }\r\n    deleteEntry = (id) => {\r\n        let filtereMovies = this.state.movies.filter((movieObj) => {\r\n            return movieObj._id != id;\r\n        })\r\n        this.setState({\r\n            movies: filtereMovies\r\n        })\r\n    }\r\n    setCurrentText = (e) => {\r\n        let task = e.target.value;\r\n        // filter \r\n        this.setState({\r\n            currSearchText: task\r\n        })\r\n    }\r\n    sortByRatings = (e) => {\r\n        let className = e.target.className;\r\n        let sortedMovies;\r\n        let { movies } = this.state;\r\n        if (className == \"fas fa-sort-up\") {\r\n            sortedMovies = movies.sort((movieObjA, movieObjB) => {\r\n                return movieObjA.dailyRentalRate - movieObjB.dailyRentalRate;\r\n            });\r\n        } else {\r\n            sortedMovies = movies.sort((movieObjA, movieObjB) => {\r\n                return movieObjB.dailyRentalRate - movieObjA.dailyRentalRate;\r\n            });\r\n        }\r\n        this.setState({\r\n            movies: sortedMovies\r\n        })\r\n    }\r\n    sortByStock = (e) => {\r\n        let className = e.target.className.trim();\r\n        let sortedMovies;\r\n        let { movies } = this.state;\r\n        if (className == \"fas fa-sort-up\") {\r\n            sortedMovies = movies.sort((movieObjA, movieObjB) => {\r\n                return movieObjA.numberInStock - movieObjB.numberInStock;\r\n            });\r\n        } else {\r\n            sortedMovies = movies.sort((movieObjA, movieObjB) => {\r\n                return movieObjB.numberInStock - movieObjA.numberInStock;\r\n            });\r\n        }\r\n        this.setState({\r\n            movies: sortedMovies\r\n        })\r\n    }\r\n    changelimit = (e) => {\r\n        // console.log(\"hello\");\r\n        let currLimit = e.target.value;\r\n        if (currLimit < 1)\r\n            return;\r\n        // console.log(currPage);\r\n        this.setState({\r\n            limit: currLimit\r\n        })\r\n    }\r\n    changeCurrentPage = (pageNumber) => {\r\n        this.setState({\r\n            currentPage: pageNumber\r\n        })\r\n    }\r\n    groupBygenre = (name) => {\r\n        this.setState({\r\n            cGenre: name,\r\n            currSearchText: \"\"\r\n        })\r\n    }\r\n    async componentDidMount() {\r\n        // console.log(2);\r\n        let resp = await fetch(\"https://react-backend101.herokuapp.com/movies\");\r\n        let jsonMovies = await resp.json();\r\n        this.setState({\r\n            movies: jsonMovies.movies\r\n        });\r\n        resp = await fetch(\"https://react-backend101.herokuapp.com/genres\");\r\n        let jsonGenres = await resp.json();\r\n        this.setState({\r\n            genres: [...this.state.genres, ...jsonGenres.genres]\r\n        });\r\n    }\r\n    render() {\r\n        console.log(1);\r\n        let { movies, currSearchText, limit, currentPage, genres, cGenre } = this.state;\r\n        // console.log(movies);\r\n        //   genre\r\n        let filteredArr = movies;\r\n        if (cGenre != \"All Genres\") {\r\n            filteredArr = filteredArr.filter((movieObj) => {\r\n                return movieObj.genre.name == cGenre;\r\n            })\r\n        }\r\n        // search term \r\n        if (currSearchText != \"\") {\r\n            filteredArr = filteredArr.filter((movieObj) => {\r\n                let title = movieObj.title.trim().toLowerCase();\r\n                // console.log(title);\r\n                return title.includes(currSearchText.toLowerCase());\r\n            })\r\n        }\r\n\r\n        // impliment\r\n        // console.log(filteredArr);\r\n        // si -> (pagenumber-1)*limit;\r\n        // eidx = si+limit;\r\n        // number of pages \r\n        // paginate \r\n        let numberofPage = Math.ceil(filteredArr.length / limit);\r\n        let si = (currentPage - 1) * limit;\r\n        let eidx = si + limit;\r\n        filteredArr = filteredArr.slice(si, eidx);\r\n        return (\r\n            <div className=\"row\" style={{padding:\"10px\"}}>\r\n                {/* 12 part */}\r\n                <div className=\"col-3\">\r\n                    <List genres={genres} groupBygenre={this.groupBygenre}></List>\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <input type=\"search\" value={currSearchText}\r\n                        onChange={this.setCurrentText} />\r\n                    <input type=\"number\" className=\"col-1\"\r\n                        placeholder=\"no of elements/page\"\r\n                        value={limit}\r\n                        onChange={this.changelimit}\r\n                    />\r\n                    {/* <input type=\"text\" className=\"pageNumber\"\r\n                        placeholder=\"page number\" /> */}\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Title</th>\r\n                                <th scope=\"col\">Genre</th>\r\n                                <th scope=\"col\">\r\n                                    <i className=\"fas fa-sort-up\" onClick={this.sortByStock}></i>\r\n                                    Stock\r\n                                    <i className=\"fas fa-sort-down\" onClick={this.sortByStock}></i>\r\n                                </th>\r\n                                <th scope=\"col\">\r\n                                    <i className=\"fas fa-sort-up\" onClick={this.sortByRatings}></i>\r\n                                    Rate\r\n                                    <i className=\"fas fa-sort-down\" onClick={this.sortByRatings}></i>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {filteredArr.map((movieObj) => {\r\n                                return (<tr scope=\"row\" key={movieObj._id}>\r\n                                    <td> </td>\r\n\r\n                                    <td>{movieObj.title} </td>\r\n                                    <td>{movieObj.genre.name}</td>\r\n                                    <td>{movieObj.numberInStock}</td>\r\n                                    <td>{movieObj.dailyRentalRate}</td>\r\n                                    <td><button type=\"button\" className=\"btn btn-danger\"\r\n                                        onClick={() => {\r\n                                            this.deleteEntry(movieObj._id);\r\n                                        }}>Delete</button></td>\r\n                                </tr>)\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                    <Pagination\r\n                        numberofPage={numberofPage}\r\n                        currentPage={currentPage}\r\n                        changeCurrentPage={this.changeCurrentPage}\r\n                    ></Pagination>\r\n\r\n                </div>\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n\r\n// currentPage\r\n// this.changeCurrentPage(pageNumber)\r\n// /function\r\n// no of pages \r\n// current page\r\n\r\n// genere array\r\n// /groupBygen","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n export default class NavBar extends Component {\r\n    render() {\r\n        return (\r\n            <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <Link className=\"navbar-brand\" to=\"/\">Movies</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" \r\n                data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                    <div className=\"navbar-nav\">\r\n                        <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}","import './App.css';\r\nimport New from './component/New';\r\nimport {BrowserRouter, Route , Switch} from 'react-router-dom'\r\nimport MoviesPage from './component/MoviesPages';\r\nimport NavBar from './component/NavBar';\r\n\r\nfunction App() {\r\n  return (\r\n \r\n<BrowserRouter>\r\n<NavBar></NavBar>\r\n    <Switch>\r\n      \r\n      <Route to=\"/\" exact component={MoviesPage}></Route>\r\n      <Route to=\"/new\" exact component={New}></Route>\r\n    </Switch>\r\n    </BrowserRouter>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}